 big software overhead you get with Python. Now JIT is somewhere in the middle, what's used in Java. JIT compilers can recover some of the performance. In fact, it did a pretty good job in this case. The idea is when the code is first interpreted, it's executed, it's interpreted. And then the runtime sees system keeps track of how often the various pieces of code are executed. And whatever it finds that there's some piece of code that it's executing frequently, it then calls the compiler to compile that piece of code.